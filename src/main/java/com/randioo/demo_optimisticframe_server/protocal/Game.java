// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Game.proto

package com.randioo.demo_optimisticframe_server.protocal;

public final class Game {
  private Game() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class GameAction extends
      com.google.protobuf.GeneratedMessage {
    // Use GameAction.newBuilder() to construct.
    private GameAction() {
      initFields();
    }
    private GameAction(boolean noInit) {}
    
    private static final GameAction defaultInstance;
    public static GameAction getDefaultInstance() {
      return defaultInstance;
    }
    
    public GameAction getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.demo_optimisticframe_server.protocal.Game.internal_static_com_randioo_demo_optimisticframe_server_protocal_GameAction_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.demo_optimisticframe_server.protocal.Game.internal_static_com_randioo_demo_optimisticframe_server_protocal_GameAction_fieldAccessorTable;
    }
    
    // optional int32 gameElementID = 1;
    public static final int GAMEELEMENTID_FIELD_NUMBER = 1;
    private boolean hasGameElementID;
    private int gameElementID_ = 0;
    public boolean hasGameElementID() { return hasGameElementID; }
    public int getGameElementID() { return gameElementID_; }
    
    // optional bool leftKey = 2;
    public static final int LEFTKEY_FIELD_NUMBER = 2;
    private boolean hasLeftKey;
    private boolean leftKey_ = false;
    public boolean hasLeftKey() { return hasLeftKey; }
    public boolean getLeftKey() { return leftKey_; }
    
    // optional bool rightKey = 3;
    public static final int RIGHTKEY_FIELD_NUMBER = 3;
    private boolean hasRightKey;
    private boolean rightKey_ = false;
    public boolean hasRightKey() { return hasRightKey; }
    public boolean getRightKey() { return rightKey_; }
    
    // optional bool upKey = 4;
    public static final int UPKEY_FIELD_NUMBER = 4;
    private boolean hasUpKey;
    private boolean upKey_ = false;
    public boolean hasUpKey() { return hasUpKey; }
    public boolean getUpKey() { return upKey_; }
    
    // optional bool downKey = 5;
    public static final int DOWNKEY_FIELD_NUMBER = 5;
    private boolean hasDownKey;
    private boolean downKey_ = false;
    public boolean hasDownKey() { return hasDownKey; }
    public boolean getDownKey() { return downKey_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasGameElementID()) {
        output.writeInt32(1, getGameElementID());
      }
      if (hasLeftKey()) {
        output.writeBool(2, getLeftKey());
      }
      if (hasRightKey()) {
        output.writeBool(3, getRightKey());
      }
      if (hasUpKey()) {
        output.writeBool(4, getUpKey());
      }
      if (hasDownKey()) {
        output.writeBool(5, getDownKey());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasGameElementID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getGameElementID());
      }
      if (hasLeftKey()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, getLeftKey());
      }
      if (hasRightKey()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, getRightKey());
      }
      if (hasUpKey()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, getUpKey());
      }
      if (hasDownKey()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, getDownKey());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.demo_optimisticframe_server.protocal.Game.GameAction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.demo_optimisticframe_server.protocal.Game.GameAction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.demo_optimisticframe_server.protocal.Game.GameAction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.demo_optimisticframe_server.protocal.Game.GameAction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.demo_optimisticframe_server.protocal.Game.GameAction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.demo_optimisticframe_server.protocal.Game.GameAction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.demo_optimisticframe_server.protocal.Game.GameAction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.demo_optimisticframe_server.protocal.Game.GameAction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.demo_optimisticframe_server.protocal.Game.GameAction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.demo_optimisticframe_server.protocal.Game.GameAction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.demo_optimisticframe_server.protocal.Game.GameAction prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.demo_optimisticframe_server.protocal.Game.GameAction result;
      
      // Construct using com.randioo.demo_optimisticframe_server.protocal.Game.GameAction.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.demo_optimisticframe_server.protocal.Game.GameAction();
        return builder;
      }
      
      protected com.randioo.demo_optimisticframe_server.protocal.Game.GameAction internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.demo_optimisticframe_server.protocal.Game.GameAction();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.demo_optimisticframe_server.protocal.Game.GameAction.getDescriptor();
      }
      
      public com.randioo.demo_optimisticframe_server.protocal.Game.GameAction getDefaultInstanceForType() {
        return com.randioo.demo_optimisticframe_server.protocal.Game.GameAction.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.demo_optimisticframe_server.protocal.Game.GameAction build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.demo_optimisticframe_server.protocal.Game.GameAction buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.demo_optimisticframe_server.protocal.Game.GameAction buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.demo_optimisticframe_server.protocal.Game.GameAction returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.demo_optimisticframe_server.protocal.Game.GameAction) {
          return mergeFrom((com.randioo.demo_optimisticframe_server.protocal.Game.GameAction)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.demo_optimisticframe_server.protocal.Game.GameAction other) {
        if (other == com.randioo.demo_optimisticframe_server.protocal.Game.GameAction.getDefaultInstance()) return this;
        if (other.hasGameElementID()) {
          setGameElementID(other.getGameElementID());
        }
        if (other.hasLeftKey()) {
          setLeftKey(other.getLeftKey());
        }
        if (other.hasRightKey()) {
          setRightKey(other.getRightKey());
        }
        if (other.hasUpKey()) {
          setUpKey(other.getUpKey());
        }
        if (other.hasDownKey()) {
          setDownKey(other.getDownKey());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setGameElementID(input.readInt32());
              break;
            }
            case 16: {
              setLeftKey(input.readBool());
              break;
            }
            case 24: {
              setRightKey(input.readBool());
              break;
            }
            case 32: {
              setUpKey(input.readBool());
              break;
            }
            case 40: {
              setDownKey(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // optional int32 gameElementID = 1;
      public boolean hasGameElementID() {
        return result.hasGameElementID();
      }
      public int getGameElementID() {
        return result.getGameElementID();
      }
      public Builder setGameElementID(int value) {
        result.hasGameElementID = true;
        result.gameElementID_ = value;
        return this;
      }
      public Builder clearGameElementID() {
        result.hasGameElementID = false;
        result.gameElementID_ = 0;
        return this;
      }
      
      // optional bool leftKey = 2;
      public boolean hasLeftKey() {
        return result.hasLeftKey();
      }
      public boolean getLeftKey() {
        return result.getLeftKey();
      }
      public Builder setLeftKey(boolean value) {
        result.hasLeftKey = true;
        result.leftKey_ = value;
        return this;
      }
      public Builder clearLeftKey() {
        result.hasLeftKey = false;
        result.leftKey_ = false;
        return this;
      }
      
      // optional bool rightKey = 3;
      public boolean hasRightKey() {
        return result.hasRightKey();
      }
      public boolean getRightKey() {
        return result.getRightKey();
      }
      public Builder setRightKey(boolean value) {
        result.hasRightKey = true;
        result.rightKey_ = value;
        return this;
      }
      public Builder clearRightKey() {
        result.hasRightKey = false;
        result.rightKey_ = false;
        return this;
      }
      
      // optional bool upKey = 4;
      public boolean hasUpKey() {
        return result.hasUpKey();
      }
      public boolean getUpKey() {
        return result.getUpKey();
      }
      public Builder setUpKey(boolean value) {
        result.hasUpKey = true;
        result.upKey_ = value;
        return this;
      }
      public Builder clearUpKey() {
        result.hasUpKey = false;
        result.upKey_ = false;
        return this;
      }
      
      // optional bool downKey = 5;
      public boolean hasDownKey() {
        return result.hasDownKey();
      }
      public boolean getDownKey() {
        return result.getDownKey();
      }
      public Builder setDownKey(boolean value) {
        result.hasDownKey = true;
        result.downKey_ = value;
        return this;
      }
      public Builder clearDownKey() {
        result.hasDownKey = false;
        result.downKey_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.demo_optimisticframe_server.protocal.GameAction)
    }
    
    static {
      defaultInstance = new GameAction(true);
      com.randioo.demo_optimisticframe_server.protocal.Game.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.demo_optimisticframe_server.protocal.GameAction)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_demo_optimisticframe_server_protocal_GameAction_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_demo_optimisticframe_server_protocal_GameAction_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\nGame.proto\0220com.randioo.demo_optimisti" +
      "cframe_server.protocal\"f\n\nGameAction\022\025\n\r" +
      "gameElementID\030\001 \001(\005\022\017\n\007leftKey\030\002 \001(\010\022\020\n\010" +
      "rightKey\030\003 \001(\010\022\r\n\005upKey\030\004 \001(\010\022\017\n\007downKey" +
      "\030\005 \001(\010"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_randioo_demo_optimisticframe_server_protocal_GameAction_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_randioo_demo_optimisticframe_server_protocal_GameAction_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_demo_optimisticframe_server_protocal_GameAction_descriptor,
              new java.lang.String[] { "GameElementID", "LeftKey", "RightKey", "UpKey", "DownKey", },
              com.randioo.demo_optimisticframe_server.protocal.Game.GameAction.class,
              com.randioo.demo_optimisticframe_server.protocal.Game.GameAction.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
